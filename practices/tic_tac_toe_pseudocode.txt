# CB 1st Tic Tac Toe Pseudocode

# Create list for tic-tac-toe board (3 lists inside a list, each with 3 empty strings)
# [[" "," "," "],
   [" "," "," "],
   [" "," "," "]]

# Initialize player 1 and player 2 scores
# Set up turn variables (Boolean variables to check whose turn it is, player 1 will start as true and player 2 will start as false)
# Player 1 will be X and player 2 will be O

# Defining a function, win_check(board)
    # if column 1 is all X:
        return 1

    # elif column 2 is all X:
        return 1

    # elif column 3 is all X:
        return 1

    # elif row 1 is all X:
        return 1

    # elif row 2 is all X:
        return 1

    # elif row 3 is all X:
        return 1
    # elif diagonal from top-left to bottom-right is all X:
        return 1
    # elif diagonal from top-right to bottom-left is all X:
        return 1
    # else:
        # if column 1 is all O:
        return 2

        # elif column 2 is all O:
            return 2

        # elif column 3 is all O:
            return 2

        # elif row 1 is all O:
            return 2

        # elif row 2 is all O:
            return 2

        # elif row 3 is all O:
            return 2
        # elif diagonal from top-left to bottom-right is all O:
            return 2
        # elif diagonal from top-right to bottom-left is all O:
            return 1
        # else:
            return False


# Main game loop 
while True:
    # print the board and assign each spot on the board a name (i.e: A3, C2, B1)
    # if player 1 turn is True:

        # ask player 1 where they want to go
        # while the input is not valid (i.e, a non-existent space or a space that is already taken):
            # ask the user for a valid input
        # Add the player 1's answer into the spot they specfied, marked as an X
        # Set player 1's turn to False
        # Set player 2's turn to True
        # Calling win_check()
        # if win_check() == 1:
            # Display "Player 1 (X) has won!"
        # elif win_check() == 2:
            # Display "Player 2 (O) has won!"
        # else:
            continue
        

     # elif player 2 turn is True:

        # ask player 2 where they want to go
        # while the input is not valid (i.e, a non-existent space or a space that is already taken):
            # ask the user for a valid input
        # Add the player 2's answer into the spot they specfied, marked as an O
        # Set player 2's turn to False
        # Set player 2's turn to True
         # if win_check() == 1:
            # Display "Player 1 (X) has won!"
        # elif win_check() == 2:
            # Display "Player 2 (O) has won!"
        # else:
            continue